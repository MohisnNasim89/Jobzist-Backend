Save Post in UserProfile 

notifications older than 1 month deleted automatically from DB

in hire candidate controller, when the job seeker is hired and if the employer is company employee then add the job seeker Id to Company employee and In case of Company employer register add it to company employee

need to improve company related things in job controller

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

import OpenAI from "openai";

const openai = new OpenAI({
  apiKey: "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",
});

const completion = openai.chat.completions.create({
  model: "gpt-4o-mini",
  store: true,
  messages: [
    {"role": "user", "content": "write a haiku about ai"},
  ],
});

completion.then((result) => console.log(result.choices[0].message));


Update socket.js (Frontend Responsibility)
The server emits encrypted messages, and decryption should occur on the client side using the same key. Update your frontend to:
Store the encryption key securely (e.g., in local storage or a secure vault) when the chat is started.
Use CryptoJS.AES.decrypt to decrypt received messages.
Example frontend code (pseudo-code):
javascript

Copy
const socket = io("http://localhost:5000");
socket.on("message", (data) => {
  const decryptedMessage = CryptoJS.AES.decrypt(data.message.encryptedMessage, chatEncryptionKey).toString(CryptoJS.enc.Utf8);
  console.log("Decrypted message:", decryptedMessage);
});